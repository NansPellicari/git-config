[alias]
    rb = rebase
    rbc = rebase --continue
    rba = rebase --abort
    lfl = log --follow
    whatadded = log --diff-filter=A
    showfile = diff-tree --no-commit-id --name-only -r
    mnf = merge --no-ff
    pr = pull --rebase
    amend = commit --amend
    st = status
    who = shortlog -sne
    oneline = log --pretty=oneline --abbrev-commit --graph
    changes = diff --name-status
    dic = diff --cached
    diffstat = diff --stat
    svnpull = svn rebase
    svnpush = svn dcommit
    lc = !git oneline ORIG_HEAD.. --stat --no-merges
    addm = !git-ls-files -m -z | xargs -0 git-add && git status
    addu = !git-ls-files -o --exclude-standard -z | xargs -0 git-add && git status
    rmm = !git ls-files -d -z | xargs -0 git-rm && git status
    mate = !git-ls-files -m -z | xargs -0 mate
    mateall = !git-ls-files -m -o --exclude-standard -z | xargs -0 mate
    df = difftool --dir-diff
    dfh = difftool --dir-diff HEAD
    co = checkout
    ci = commit
    br = branch
    undo = git reset --soft HEAD^
    # Log history (requires git 1.8.3  for "%C(auto)" ) : display short sha1, refs (branches,tags), log msg, relative datetime and author
    lf = log --graph --pretty=format:'%C(yellow)%h%Creset %C(red)%d%Creset %s %Cgreen(%cr) %C(bold cyan)<%an>%Creset' --abbrev-commit --date=relative --format=fuller 
    lg = log --graph --pretty=format:'%C(yellow)%h%Creset %C(red)%d%Creset %s %Cgreen(%cr) %C(bold cyan)<%an>%Creset' --abbrev-commit --date=relative 
    lgb = log --graph --pretty=format:'%C(yellow)%h%Creset %C(red)%d%Creset %s %Cgreen(%cr) %C(bold cyan)<%an>%Creset' --abbrev-commit --date=relative --branches 
    lga = log --graph --pretty=format:'%C(yellow)%h%Creset %C(red)%d%Creset %s %Cgreen(%cr) %C(bold cyan)<%an>%Creset' --abbrev-commit --date=relative --all 
[core]
	editor = vim
[color]
	ui = true
#[merge]
#	tool = extMerge
#[mergetool "extMerge"]
#	cmd = extMerge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
#[mergetool]
#	trustExitCode = false
[diff]
#	external = extDiff
#	external = /home/nans/git-meld
	tool = meld

[push]
	default = current
[difftool]
	prompt = false
[merge]
	tool = meld
[mergetool]
	prompt = false
#[mergetool "meld"]
#	cmd = meld \"$BASE $LOCAL $REMOTE $MERGED\"
#	trustExitCode = false
#[difftool "meld"]
#	cmd = meld \"$LOCAL $REMOTE\"
